{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\fverz\\\\Documents\\\\myProjects\\\\vlust-hosting\\\\src\\\\components\\\\Looks\\\\Look.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport './Look.css';\nimport firebase from '../../../lib/init-firebase';\nimport Modal from '../UI/Modal/Modal';\nimport Link from 'next/link';\nimport image from '../../images/favicon.png';\nimport lazyImage from '../../images/gray.jpg';\nimport { LazyImage } from \"react-lazy-images\";\n\nvar Look = function Look(props) {\n  var _useState = useState(false),\n      modal = _useState[0],\n      setModal = _useState[1];\n\n  var fetchVote =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(id) {\n      var res, json, jsonVotes, newVote;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://the-v-lust.firebaseio.com/votes/\".concat(id, \".json\"));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              json = _context.sent;\n              jsonVotes = 0;\n              json ? jsonVotes = json.votes : jsonVotes = 0;\n              newVote = jsonVotes + 1;\n              return _context.abrupt(\"return\", new _Promise(function (resolve) {\n                resolve(firebase.database().ref('votes/' + id).set({\n                  pictureId: id,\n                  votes: newVote\n                }));\n              }));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchVote(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var voting =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(commonId) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetchVote(commonId);\n\n            case 2:\n              setModal(true);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function voting(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var url = props.url;\n\n  if (url.startsWith('http')) {\n    url;\n  } else {\n    url = 'http://' + url;\n  }\n\n  return __jsx(\"div\", {\n    className: \"event\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Modal, {\n    show: modal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: \"ModalText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Thank you for voting!\"), __jsx(Link, {\n    href: \"/results\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: image,\n    className: \"ModalImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(Link, {\n    href: \"/results\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Check out who's winning!\")), __jsx(\"div\", {\n    className: \"look\",\n    onClick: function onClick(commonId) {\n      return voting(props.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(LazyImage, {\n    src: props.image,\n    alt: \"LOOK\",\n    placeholder: function placeholder(_ref3) {\n      var imageProps = _ref3.imageProps,\n          ref = _ref3.ref;\n      return __jsx(\"img\", {\n        ref: ref,\n        className: \"image\",\n        src: lazyImage,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        alt: imageProps.alt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    },\n    actual: function actual(_ref4) {\n      var imageProps = _ref4.imageProps;\n      return __jsx(\"img\", _extends({\n        className: \"image\"\n      }, imageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, props.name.toUpperCase())));\n};\n\nexport default Look;","map":{"version":3,"sources":["C:\\Users\\fverz\\Documents\\myProjects\\vlust-hosting\\src\\components\\Looks\\Look.js"],"names":["React","useState","useEffect","firebase","Modal","Link","image","lazyImage","LazyImage","Look","props","modal","setModal","fetchVote","id","fetch","res","json","jsonVotes","votes","newVote","resolve","database","ref","set","pictureId","voting","commonId","url","startsWith","imageProps","width","height","alt","name","toUpperCase"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nimport './Look.css'\r\nimport firebase from '../../../lib/init-firebase'\r\nimport Modal from '../UI/Modal/Modal'\r\nimport Link from 'next/link'\r\nimport image from '../../images/favicon.png'\r\nimport lazyImage from '../../images/gray.jpg'\r\nimport { LazyImage } from \"react-lazy-images\"\r\n\r\n\r\nconst Look = (props) => {\r\n    const [modal, setModal] = useState(false)\r\n\r\n    const fetchVote = async (id) => {\r\n        const res = await fetch(`https://the-v-lust.firebaseio.com/votes/${id}.json`)\r\n        const json = await res.json()\r\n        let jsonVotes = 0\r\n        json ? jsonVotes = json.votes : jsonVotes = 0\r\n        let newVote = jsonVotes + 1\r\n        return new Promise((resolve) => {\r\n                resolve(firebase.database().ref('votes/' + id).set({\r\n                    pictureId: id,\r\n                    votes: newVote,\r\n                }))\r\n            })\r\n     }\r\n\r\n    const voting = async (commonId) => {\r\n        await fetchVote(commonId)\r\n        setModal(true)\r\n    }\r\n\r\n    let url = props.url\r\n    if (url.startsWith('http')) {\r\n        url\r\n    } else {\r\n        url = 'http://' + url \r\n    }\r\n\r\n    return (           \r\n        <div className=\"event\">\r\n            <Modal show={modal}>\r\n            <p className=\"ModalText\">Thank you for voting!</p>\r\n            <Link href='/results'><img src={image} className=\"ModalImage\"/></Link>\r\n            <br/>\r\n            <Link href='/results'>Check out who's winning!</Link>\r\n            </Modal>\r\n            <div  className=\"look\" onClick={(commonId) => voting(props.id)}>\r\n                    <LazyImage \r\n                        src={props.image}\r\n                        alt=\"LOOK\"\r\n                        placeholder={({ imageProps, ref }) => (\r\n                            <img ref={ref} className=\"image\"  src={lazyImage} style={{width: '100%', height: '100%'}} alt={imageProps.alt} />\r\n                          )} \r\n                        actual={({ imageProps }) => <img className=\"image\" {...imageProps} />} />\r\n                    <p className=\"text\">{(props.name).toUpperCase()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Look\r\n\r\n"]},"metadata":{},"sourceType":"module"}