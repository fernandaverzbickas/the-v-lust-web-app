{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport './WinnerLook.css';\nimport Spinner from '../UI/Spinner/Spinner';\nimport lazyImage from '../../../src/images/gray.jpg';\nimport { LazyImage } from \"react-lazy-images\";\n\nconst WinnerLook = props => {\n  let url = props.url;\n\n  if (url.startsWith('http')) {\n    url;\n  } else {\n    url = 'http://' + url;\n  }\n\n  let winnerLook = __jsx(\"div\", {\n    className: \"WinnerLookDiv\"\n  }, __jsx(\"div\", {\n    className: \"WinnerLookCont\"\n  }, __jsx(\"p\", {\n    className: \"WinnerLookName\"\n  }, props.name.toUpperCase()), __jsx(LazyImage, {\n    src: props.imageUrl,\n    alt: \"WINNER LOOK\",\n    placeholder: ({\n      imageProps,\n      ref\n    }) => __jsx(\"img\", {\n      ref: ref,\n      className: \"WinnerLookPic\",\n      src: lazyImage,\n      alt: imageProps.alt\n    }),\n    actual: ({\n      imageProps\n    }) => __jsx(\"img\", _extends({\n      className: \"WinnerLookPic\"\n    }, imageProps))\n  }), __jsx(\"div\", {\n    className: \"totalVotes\"\n  }, props.votes > 1 ? props.votes + \" VOTES\" : props.votes + \" VOTE\"), __jsx(\"a\", {\n    href: url,\n    target: \"_blank\"\n  }, \"GET THE LOOK\")));\n\n  return __jsx(\"div\", null, props.imageUrl ? winnerLook : __jsx(Spinner, null));\n};\n\nexport default WinnerLook;","map":null,"metadata":{},"sourceType":"module"}