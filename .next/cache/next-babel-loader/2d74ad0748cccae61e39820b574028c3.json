{"ast":null,"code":"import _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\n\nrequire('intersection-observer');\n\nimport './style.css';\nimport Layout from '../src/components/Layout/Layout';\nimport fetch from 'isomorphic-fetch';\nimport Link from 'next/link';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Spinner from '../src/components/UI/Spinner/Spinner';\nvar Look = React.lazy(function () {\n  return import('../src/components/Looks/Look');\n});\n\nvar Home = function Home() {\n  var _useState = useState([]),\n      json = _useState[0],\n      setJson = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      outputed = _useState3[0],\n      setOutputed = _useState3[1];\n\n  var _useState4 = useState(true),\n      hasMore = _useState4[0],\n      setHasMore = _useState4[1];\n\n  var _useState5 = useState(6),\n      limit = _useState5[0],\n      setLimit = _useState5[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      fetch('https://the-v-lust.firebaseio.com/looks.json').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data === null) {\n          setLoading(false);\n        }\n\n        if (data) {\n          var dataJson = _Object$entries(data);\n\n          var shuffled = dataJson.map(function (a) {\n            return {\n              sort: Math.random(),\n              value: a\n            };\n          }).sort(function (a, b) {\n            return a.sort - b.sort;\n          }).map(function (a) {\n            return a.value;\n          });\n          var storesInfo = [];\n\n          if (shuffled.length !== 0 || shuffled !== null) {\n            for (var i = 0; i < shuffled.length; i++) {\n              storesInfo.push([shuffled[i][0], shuffled[i][1].name, shuffled[i][1].email, shuffled[i][1].url, shuffled[i][1].imageUrl]);\n            }\n          }\n\n          setJson(storesInfo);\n          outputData(storesInfo);\n          setLoading(false);\n        }\n      })[\"catch\"](function (err) {\n        console.log(err);\n        setLoading(false);\n      });\n    };\n\n    fetchData();\n  }, []);\n  var data = [];\n\n  var outputData = function outputData(storesInfo) {\n    if (storesInfo.length > 0) {\n      if (outputed.length === 0) {\n        data = storesInfo.slice(0, limit);\n        setOutputed(data);\n\n        if (data.length >= storesInfo.length) {\n          setHasMore(false);\n        }\n      }\n    }\n  };\n\n  var fetchData = function fetchData() {\n    var oldLimit = limit;\n    var partialArr = json.slice(oldLimit, limit + 3);\n    setOutputed(outputed.concat(partialArr));\n    setLimit(limit + 3);\n\n    if (json.length <= outputed.length + partialArr.length) {\n      setHasMore(false);\n    }\n  };\n\n  console.log('hasMOre?:', hasMore);\n\n  var looks = __jsx(Spinner, null);\n\n  if (loading === false && json.length === 0) {\n    looks = __jsx(\"div\", {\n      style: {\n        position: \"relative\",\n        verticalAlign: \"middle\"\n      }\n    }, __jsx(\"p\", {\n      style: {\n        textAlign: \"center\",\n        width: '100%',\n        marginTop: \"30%\"\n      }\n    }, \"NO LOOKS SUBMITTED YET! CHECK LATER OR \"), __jsx(Link, {\n      href: \"/submit\"\n    }, __jsx(\"a\", {\n      style: {\n        cursor: 'pointer',\n        textDecoration: 'underline',\n        textAlign: 'center',\n        display: 'block'\n      }\n    }, \"SUBMIT YOUR LOOK!\")));\n  }\n\n  if (json.length > 0) {\n    looks = __jsx(\"div\", null, __jsx(InfiniteScroll, {\n      dataLength: outputed.length,\n      next: fetchData,\n      hasMore: hasMore,\n      loader: __jsx(Spinner, null),\n      endMessage: __jsx(\"p\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, __jsx(\"b\", null, \"YOU HAVE SEEN IT ALL! \", __jsx(\"br\", null), \" IT'S TIME TO CHOOSE!\"))\n    }, __jsx(\"div\", {\n      className: \"Looks\"\n    }, outputed.map(function (look) {\n      return __jsx(Look, {\n        key: look[0],\n        id: look[0],\n        name: look[1],\n        email: look[2],\n        url: look[3],\n        image: look[4]\n      });\n    }))));\n  }\n\n  return __jsx(Layout, null, __jsx(\"p\", {\n    className: \"intro\"\n  }, \"VOTE FOR YOUR FAVORITE LOOK!\"), looks);\n};\n\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}