{"ast":null,"code":"import _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Layout from '../../src/components/Layout/Layout';\nimport Spinner from '../../src/components/UI/Spinner/Spinner';\nconst WinnerLook = React.lazy(() => import('../../src/components/WinnerLook/WinnerLook'));\n\nconst Results = () => {\n  const {\n    0: looks,\n    1: setLooks\n  } = useState([]);\n  const {\n    0: votes,\n    1: setVotes\n  } = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const looksData = await fetch(`https://the-v-lust.firebaseio.com/looks.json`);\n      const looksJson = await looksData.json();\n      looksJson ? setLooks(_Object$entries(looksJson)) : setVotes(null);\n      const votesData = await fetch(`https://the-v-lust.firebaseio.com/votes.json`);\n      const votesJson = await votesData.json();\n      votesJson ? setVotes(_Object$entries(votesJson)) : setVotes(null);\n    }\n\n    fetchData();\n  }, []);\n  let looksArr = [];\n\n  if (looks !== undefined && looks !== null && votes !== undefined && votes !== null) {\n    for (let i = 0; i < looks.length; i++) {\n      for (let j = 0; j < votes.length; j++) {\n        if (votes[j][0] === looks[i][0]) {\n          looksArr.push([votes[j][1].votes, votes[j][0], looks[i][1].url, looks[i][1].imageUrl, looks[i][1].name]);\n        }\n      }\n    }\n  }\n\n  looksArr = looksArr.sort(function (a, b) {\n    let retVal = 0;\n    if (a[0] != b[0]) retVal = a[0] > b[0] ? 1 : -1;else if (a[1] != b[1]) retVal = a[1] > b[1] ? 1 : -1;else if (a[2] != b[2]) retVal = a[2] > b[2] ? 1 : -1;\n    return retVal;\n  });\n  looksArr = looksArr.reverse().slice(0, 10);\n\n  let winner = __jsx(\"div\", null, __jsx(\"p\", {\n    className: \"WinnerLookTheme\"\n  }, \"MOST VOTED LOOKS\"), looksArr.map(look => {\n    return __jsx(WinnerLook, {\n      key: look[1],\n      id: look[1],\n      url: look[2],\n      imageUrl: look[3],\n      votes: look[0],\n      name: look[4]\n    });\n  }));\n\n  if (votes === null) {\n    winner = __jsx(\"div\", {\n      style: {\n        position: \"relative\",\n        verticalAlign: \"middle\"\n      }\n    }, __jsx(\"p\", {\n      style: {\n        textAlign: \"center\",\n        width: '100%',\n        marginTop: \"30%\"\n      }\n    }, \"NO LOOKS VOTED YET! \"), __jsx(\"a\", {\n      href: '/',\n      style: {\n        cursor: 'pointer',\n        textDecoration: 'underline',\n        textAlign: 'center',\n        display: 'block'\n      }\n    }, \"VOTE FOR YOUR FAVORITE LOOK!\"));\n  }\n\n  if (votes !== null && looksArr.length < 1) {\n    winner = __jsx(\"div\", null, __jsx(Spinner, null));\n  }\n\n  return __jsx(Layout, null, winner);\n};\n\nexport default Results;","map":null,"metadata":{},"sourceType":"module"}